/*
 * Copyright (C) 2023 Synopsys Inc.
 * http://www.synopsys.com/
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of
 * Synopsys ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Synopsys.
 */
package com.synopsys.kb.httpclient.model;

import java.util.Objects;
import java.util.Optional;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Vulnerability reference representation.
 * 
 * @author skatzman
 */
public class VulnerabilityReference {
    private final String source;

    private final String href;

    private final String content;

    private final String type;

    @JsonCreator
    public VulnerabilityReference(@JsonProperty("source") String source,
            @JsonProperty("href") String href,
            @JsonProperty("content") String content,
            @JsonProperty("type") String type) {
        this.source = source;
        this.href = href;
        this.content = content;
        this.type = type;
    }

    public Optional<String> getSource() {
        return Optional.ofNullable(source);
    }

    public Optional<String> getHref() {
        return Optional.ofNullable(href);
    }

    public Optional<String> getContent() {
        return Optional.ofNullable(content);
    }

    public Optional<String> getType() {
        return Optional.ofNullable(type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSource(), getHref(), getContent(), getType());
    }

    @Override
    public boolean equals(Object otherObject) {
        if (this == otherObject) {
            return true;
        } else if (otherObject instanceof VulnerabilityReference) {
            VulnerabilityReference otherVulnerabilityReference = (VulnerabilityReference) otherObject;

            return Objects.equals(getSource(), otherVulnerabilityReference.getSource())
                    && Objects.equals(getHref(), otherVulnerabilityReference.getHref())
                    && Objects.equals(getContent(), otherVulnerabilityReference.getContent())
                    && Objects.equals(getType(), otherVulnerabilityReference.getType());
        }

        return false;
    }
}
